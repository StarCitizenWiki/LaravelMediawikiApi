<?php declare(strict_types = 1);

namespace StarCitizenWiki\MediawikiApi\Api\Request;

use GuzzleHttp\Psr7\Response;
use StarCitizenWiki\MediawikiApi\Api\ApiRequestFactory;
use StarCitizenWiki\MediawikiApi\Contracts\ApiRequestContract;

/**
 * User: Hannes
 * Date: 05.10.2018
 * Time: 18:30
 */
class Edit extends AbstractBaseRequest implements ApiRequestContract
{
    public function __construct()
    {
        $this->params['action'] = 'edit';
    }

    public function requestMethod(): string
    {
        return 'POST';
    }

    public function needsAuthentication(): bool
    {
        return true;
    }

    public function title(string $title)
    {
        unset($this->params['pageid']);
        $this->params['title'] = $title;

        return $this;
    }

    public function pageId(int $id)
    {
        unset($this->params['title']);
        $this->params['pageid'] = $id;

        return $this;
    }

    public function text(string $text)
    {
        $this->params['text'] = $text;
        $this->params['md5'] = md5($this->params['text']);

        return $this;
    }

    public function section(?int $id = null)
    {
        $this->params['section'] = $id;
        if (null === $id) {
            $this->params['section'] = 'new';
        }

        return $this;
    }

    public function sectionTitle(string $title)
    {
        $this->params['sectiontitle'] = $title;

        return $this;
    }

    public function summary(string $summary)
    {
        $this->params['summary'] = $summary;

        return $this;
    }

    public function createOnly()
    {
        $this->params['createonly'] = true;

        return $this;
    }

    public function minor()
    {
        unset($this->params['notminor']);
        $this->params['minor'] = true;

        return $this;
    }

    public function notMinor()
    {
        unset($this->params['minor']);
        $this->params['notminor'] = true;

        return $this;
    }

    public function request(): Response
    {
        $response = app(ApiRequestFactory::class)->make('query')->withTimestamp()->meta('tokens')->request();
        $body = $response->getBody()->getContents();
        $body = json_decode($body, true);

        $this->params['starttimestamp'] = $body['curtimestamp'];
        $this->params['token'] = $body['query']['tokens']['csrftoken'];

        return parent::request(); // TODO: Change the autogenerated stub
    }
}
